# Nom du Workflow (affiché dans l'onglet Actions)
name: Build Kivy APK with Buildozer

# Déclencheurs: quand tu pousses du code sur 'main' ou 'master', OU manuellement
on:
  push:
    branches: [ main, master ] # Adapte si ta branche s'appelle autrement
  workflow_dispatch: # Permet de lancer manuellement depuis l'onglet Actions

jobs:
  build:
    # Utilise la dernière version d'un serveur Linux (Ubuntu) fourni par GitHub
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Récupère le code de ton dépôt GitHub
      - name: Checkout code
        uses: actions/checkout@v4

      # Étape 2: Installe la version de Python désirée
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Une version stable compatible

      # Étape 3: Installe Java (nécessaire pour les outils Android SDK/NDK)
      - name: Set up Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17' # Version récente recommandée pour Android
          distribution: 'temurin' # Distribution OpenJDK standard

      # Étape 4: Installe les outils système et les paquets Python nécessaires
      - name: Install Buildozer and dependencies
        run: | # Le pipe | indique un script multi-lignes
          # Met à jour la liste des paquets Linux
          sudo apt-get update -y
          # Installe des outils système utiles pour Buildozer et Android
          sudo apt-get install -y git zip unzip wget ant
          # Met à jour l'installeur Python pip
          pip install --upgrade pip
          # *** CORRECTION ICI: Installe Cython AVANT Buildozer ***
          pip install cython==0.29.34 # Version spécifique et stable de Cython
          # Installe Buildozer
          pip install buildozer
          # Ajoute le dossier d'installation local pip au PATH pour trouver buildozer
          echo "/home/runner/.local/bin" >> $GITHUB_PATH

      # Étape 5 (Optionnelle mais utile): Vérifie les fichiers présents
      - name: List files in current directory
        run: ls -la # Affiche le contenu du dossier racine du projet

      # Étape 6: Lance la construction de l'APK avec Buildozer
      - name: Build with Buildozer
        run: |
          buildozer --version # Affiche la version de Buildozer utilisée
          buildozer clean || echo "Clean failed, continuing build..."
          buildozer android debug # Lance la construction de l'APK de débogage

      # Étape 7: Récupère l'APK construit (artifact) si la construction réussit
      - name: Upload APK artifact
        # Condition: ne s'exécute que si les étapes précédentes ont réussi
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          # Nom de l'archive zip qui sera téléchargeable
          name: apk
          # Chemin vers le(s) fichier(s) à inclure dans l'archive
          path: bin/*.apk # Buildozer place les APK dans le dossier bin/
